---
title: Point cloud segmentation
subtitle: Detection of lightpoles in point clouds
layout: default
modal-id: 8
date: 2019-01-12
img: points.png
thumbnail: points-thumbnail.png
alt: image-alt
project-date: January 2018
category: Web Development
description: <h3>Overview</h3> This group project aimed to segment light poles out of a point cloud taken from a car. My part in this project was to complete the planar filtering and automatic detection of the number of poles. This data was provided from <a href="https://www.here.com/">HERE technologies</a>. The challenges relating to this process involved not only the logic of finding and separating the light poles from the cloud but also doing so in a computationally efficient manner. <br> <br> <h3>Process</h3> The process involved in this project involved a multiple stage pipeline. <br> This pipeline involved the following steps &#58 <br><br> <h5>Pre-process the data</h5> Pre-processing the data involved converting the data from LLA (latitude, longitude, altitude) to Cartesian (x, y, z) co-ordinates as well as down sampling the data. This was done as the data was very dense (1,292,208,points) and by down-sampling very little useful information was lost, however this reduced the number of points so that computations were more feasible. Down-sampling was performed in three different ways &#58 <ul><li>Voxel down-sampling</li><li>Uniform down-sampling</li><li>Statistical outlier removal</li></ul> voxel down-sampling, uniform down-sampling and statistical outlier removal. This voxel down-sampling was the method used in the final implementation. This reduced the point cloud to around 39,000 points <br><br> <h5>Planar filtering</h5> This filtering method was used owing to its computational efficiency in dealing with point clouds. This is done by creating a bin size in two of the dimensions and then filtering based on the variation of points in the third dimension. This method can be used to filter for objects of a specific shape within a box. In the case of light poles the grid was created in the x and y axes. and then filtering based on the z-axis. By setting the grid size to around the size of the base of the light pole and filtering out any grids that have a z variation that is smaller than the approximate size of a pole. This resulted in a very robust segmentation of light poles. By changing the axes and the grid size this method can be used to segment out many distinctly shaped objects in a point cloud such as roads, rails and  pavements in a reasonably robust manner. <br><br> <h5>Clustering to detect number of poles</h5> The planar filtering achieves segmenting all the poles from everything else but it would be nice for each pole to be individually segmented. This can be done with set metrics such as binning based on the x and y grid again.This poses issues with  having to know how far spaced the poles are and having them evenly spaced. Instead clustering was used with variation on the "elbow method" in order to determine the optimal number of clusters and segment the point cloud into this number of poles. This method worked very well and provides a quick and easy way of segmenting data that is spatially separated. In order to make the clustering more effective with poles the clustering was done based on only the x and y co-ordinated of the points in the cloud <br><br> 

---
